HEADING LARGE: INTRODUCTION

This lab explores how to get a cell shading effect in Maya.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/intro_far.png" style="width:60%;height:60%;">

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/intro_close.png" style="width:60%;height:60%;">

HEADING MEDIUM: Pros of toon shading:
Renders super fast (< 1 min per frame generally). A good choice if you don't have access to high performance hardware or cloud rendering resources.
Great control of colors in your scene.

HEADING MEDIUM: Cons of toon shading:
Takes a bit of setup even for basic features
Particular to this lab: In this lab, toon shading is done with Arnold, the built-in renderer in Maya, not Renderman. If you want to combine toon shading and Renderman features, you will have to do some compositing in post.
Also particular to this lab: rendering toon shading with alpha channel requires 2 render passes.

HEADING MEDIUM: Pipeline
In this lab, toon shading is just using special shaders in Arnold, the built-in renderer in Maya. You can start toon shading as soon as you are done modeling your assets. You only need to unwrap UVs if you are attaching an image texture to the asset (see Attaching Image Textures). Toon shading will require extra steps in rendering and compositing if you want to render image sequences with alpha channel (see Rendering Image Sequences).





HEADING LARGE: Getting Started
Download the toon shader lab here and set your project to it:
FILE: ToonShaderLab.zip

Open ToonShadingLab_Start.ma. You should see a sphere, a human, and a directional light.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/getting_started_0.png" style="width:60%;height:60%;">





HEADING LARGE: Set the Renderer to Arnold

The toon shaders we are using are part of Arnold, the default renderer that Maya comes with, so let’s set our current renderer to that. Open render settings by clicking on the icon with the clapboard and the gear.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/set_renderer_to_arnold_0.png" style="width:60%;height:60%;">

Set the renderer to Arnold:

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/set_renderer_to_arnold_1.png" style="width:60%;height:60%;">





HEADING LARGE: Creating a Toon Shader
This lab will cover 3 main parts of toon shading: base colors, edges (the outline of color around objects), and rim light (the edge of light around objects)

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_0.png" style="width:60%;height:60%;">

Let’s attach a toon shader to the sphere. Hold down the right mouse button on the sphere and in the menu that appears, select Assign New Material.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_1.png" style="width:60%;height:60%;">

Under the Arnold, Shader tab, select aiToon.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_2.png" style="width:60%;height:60%;">

In the attribute editor for the sphere, you should see that an aiToon shader has been attached to the sphere.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_3.png" style="width:60%;height:60%;">






HEADING LARGE: Base Colors
Find the Base section of the toon shader.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_4.png" style="width:60%;height:60%;">

Set Color to any color you want. I’ll set mine to red.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_5.png" style="width:60%;height:60%;">

This is what it looks like if you render the scene now.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_6.png" style="width:60%;height:60%;">

The colors are incorrect and we want a sharper cutoff between the lights and darks of the sphere. To fix this, let’s add a ramp to the base color (This is easier to explain after it’s seen, so let’s set it up and explain later). Click the grid icon next to the Tonemap attribute.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_7.png" style="width:60%;height:60%;">

Select Ramp

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_8.png" style="width:60%;height:60%;">

In the ramp, set interpolation to None (since we want no interpolation).

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_9.png" style="width:60%;height:60%;">

Drag the white circle to the middle of the ramp.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_9b.png" style="width:60%;height:60%;">

You should end up with a ramp that’s half black and half white.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_10.png" style="width:60%;height:60%;">

Click on the black circle and set the Selected Color from black to a lighter grey.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_11.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_12.png" style="width:60%;height:60%;">

Explanation: What’s going on is that for the lighter parts of the sphere, the ramp’s white is mixed with the original red color (still the original red), and in the darker parts of the sphere, the ramp’s grey is mixed with the original red color (a darker red).

The x-axis of the ramp represents dark to light. You could actually add more than 2 colors to the ramp and get more complex shading. The color mixing method is equivalent to the “multiply” effect in Photoshop.

This is what happens when I change the grey to a light blue.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_13.png" style="width:60%;height:60%;">

This is what happens when I change the grey to a light brown.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/basic_toon_shading_14.png" style="width:60%;height:60%;">





HEADING LARGE: Edges
Find the Edge section of the toon shader.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/edge_0.png" style="width:60%;height:60%;">

The default parameters are actually perfect. The only reason why they aren’t showing up is because we need a contour filter.

Open up the render settings again

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/edge_1.png" style="width:60%;height:60%;">

Open up the Filter section

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/edge_2.png" style="width:60%;height:60%;">

Set the filter to Contour.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/edge_3.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/edge_4.png" style="width:60%;height:60%;">

You can edit the line width and color in the toon shader.




HEADING LARGE: Rim Light
Find the Rim Lighting section in the toon shader.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_0.png" style="width:60%;height:60%;">

Set the light color to white.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_1.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_2.png" style="width:60%;height:60%;">

Currently, the rim light fades gradually to the center of the sphere. We want a sharper cutoff between the lightest and darkest parts of the rim light. Sound familiar? We need another ramp!

Attach a ramp to the Color attribute by clicking on the grid icon next to it. Select Ramp in the menu that pops up. Again, make a half black half white ramp.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_3.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_4.png" style="width:60%;height:60%;">

We want the rim light to be thinner. There are two ways to do this.
1. Decrease the white part of the ramp.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_5.png" style="width:60%;height:60%;">

Or
2. Back in the toon shader’s Rim Lighting section, decrease the Width parameter (I find that 0.4 works well)

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_6.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/rim_light_7.png" style="width:60%;height:60%;">




HEADING LARGE: Shade the character!
Try shading all of the character except his pupils and eye highlights. Colors are up to you. You can select individual faces and assign toon shaders to them to make his skin and suit different colors. (Applying different shaders to different faces on one model is actually considered bad practice, but it works fine for toon shaders)

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/intro_far.png" style="width:60%;height:60%;">




HEADING LARGE: Flat Shaders
The eye highlights (the little circles on his pupils) are going to be the same shade of white no matter what and they don’t need edges. There is a convenient shortcut shader for that: a Flat shader!

Select the eye highlights.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/highlights_0.png" style="width:60%;height:60%;">

Instead of a toon shader, assign an aiFlat shader to them.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/highlights_1.png" style="width:60%;height:60%;">

In the aiFlat shader, the color attribute should already be white.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/highlights_2.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this. It looks the same as before, but now the eye highlights will be this shade of white no matter what the lighting conditions are.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/highlights_3.png" style="width:60%;height:60%;">





HEADING LARGE: Attaching Image Textures
We are going to attach a texture to a toon shader. Select the pupils and assign a toon shader to them.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/texture_0.png" style="width:60%;height:60%;">

In the Base section, click on the grid icon next to the Color attribute.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/texture_1.png" style="width:60%;height:60%;">

Select File

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/texture_2.png" style="width:60%;height:60%;">

Click on the folder icon.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/texture_3.png" style="width:60%;height:60%;">

In the "sourceimages" folder, select the png file called GrunkPupil

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/texture_4.png" style="width:60%;height:60%;">

If you render the scene now, it looks like this. The colors may look a bit off since you haven't created a ramp in the base colors section.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/texture_5.png" style="width:60%;height:60%;">

Continue setting up the shader as you normally would (ex: base color ramp, edge. You probably won’t need rim lighting, though).

When you render the scene now, it looks like this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/intro_close.png" style="width:60%;height:60%;">





HEADING LARGE: Other Toon Shading Sections

HEADING SMALL: Silhouette
A bit like edges, but only covers the outline of the model, while edges can appear on hard edges not on the boundaries of the model as well

HEADING SMALL: Specular
For reflections and shiny objects. I recommend adding a ramp to its tonemap for sharper highlight areas.

HEADING SMALL: Transmission
For glass and transparent objects. Make sure Opacity is checked in the model’s render stats. Also, the weight attribute in the specular section must be greater than 0.0 or Transmission will have no effect at all.

HEADING SMALL: Emission
For a glowing effect

HEADING SMALL: Geometry
Connect normal maps here

HEADING SMALL: Sheen
For a microfiber “velvety” look


For more details check the official toon shader <a href="https://docs.arnoldrenderer.com/display/A5AFMUG/Toon">documentation</a>.




HEADING LARGE: Rendering Image Sequences
How you render your toon shaders depends on if you want to render images with alpha channel (transparency).

HEADING MEDIUM: Quick Crash course on rendering with Arnold
Open the render settings window. In the Common tab, set up everything as you would with Renderman. You can set the render image type here.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/image_sequences_0.png" style="width:60%;height:60%;">

In the Arnold Render tab, there is a Camera (AA) field. In a nutshell, this field controls the overall quality of the render. For toon shading, 1 is low quality (use for render previews), and 3 is good generally. If your render seems noisy, feel free to turn it up even more.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/image_sequences_1.png" style="width:60%;height:60%;">

In the Rendering menu set, go to Render > Render Sequence. The images will be rendered to the “images” folder of the currently set project.

HEADING MEDIUM: Rendering without Alpha Channel
Render as png images.

HEADING MEDIUM: Rendering with Alpha Channel
Render as exr images. Alpha channel is supported in Arnold EXR image sequence renders.
However, you will need to render twice. When the filter is set to Contour, Arnold only renders edges. When the filter is set to the default Gaussian filter, Arnold renders everything but edges.
You will have to render one pass with the Contour filter and another pass with the Gaussian filter. Then composite the edges over everything else.





HEADING LARGE: (optional read) Cool Stuff You Can Do With Toon Shading: Combining 2D and 3D Animation

Toon shading makes it easier to combine 2D and 3D animation by making the two styles look more consistent. There are many ways to combine 2D and 3D animation.

HEADING MEDIUM: Faces
Do you suck at modeling, rigging or animating faces in 3D? Well why not just do it in 2D? Sometimes its easier to draw faces than to model them. Also in 3D, every facial change needs to be accounted for with a rig control and/or blendshape. In 2D animation, however, subtle changes in expressions can be accomplished with just a few pen strokes.

Ex: Clip from Land of the Lustrous, an almost fully CGI anime. Faces drawn in 2D.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/2d3d_0.gif" style="width:60%;height:60%;">

Cool optional read: <a href="https://sites.psu.edu/ayfunthingsarefun/2018/01/23/cgi-in-land-of-the-lustrous/">Land of the Lustrous BTS</a>

Ex: Clip of Mel-chan from 3DMA. 3DMA (3D Modeling and Animation) is a student organization in UC Berkeley (Join us!). Mel-chan is the human form of Mel, 3DMA’s fox mascot. Face and hair drawn in 2D.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/2d3d_1.gif" style="width:60%;height:60%;">

HEADING MEDIUM: Characters in 2D, Backgrounds in 3D
2D animation studios often keep their characters in 2D and create backgrounds in 3D. This technique is great if you have a moving camera. No need to redraw the background every frame.

Ex: Clip from the The Promised Neverland. Background is CGI

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/2d3d_2.gif" style="width:60%;height:60%;">

Ex: Clip from the Attack on Titan. Background is CGI.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/2d3d_3.gif" style="width:60%;height:60%;">

HEADING MEDIUM: Rotoscoping over 3D animation
Rotoscoping is an animation technique of tracing over parts of existing footage (in this case 3D animation) frame by frame. It can make putting 2D characters in 3D environments easier. Anime studio Ufotable (the studio behind the Fate series and Demon Slayer) sometimes does this.

<img src="https://raw.githubusercontent.com/saurabhmitra/ucbugg/gh-pages/labs/toon%20shading/2d3d_4.gif" style="width:60%;height:60%;">
